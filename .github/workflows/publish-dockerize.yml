name: Docker Image CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  publish:
    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [16.13.0]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm install -g npm@8.19.1
      - run: npm install @emotion/react@^11.10.6
      - run: npm install @emotion/styled@^11.10.6
      - run: npm install @mui/icons-material@^5.11.16
      - run: npm install @mui/material@^5.12.2
      - run: npm install @testing-library/jest-dom@^5.16.5
      - run: npm install @testing-library/react@^13.4.0
      - run: npm install @testing-library/user-event@^13.5.0
      - run: npm install @types/jest@^27.5.2
      - run: npm install @types/node@^16.18.25
      - run: npm install @types/react@^18.2.0
      - run: npm install @types/react-dom@^18.2.1
      - run: npm install axios@^1.3.6
      - run: npm install react@^18.2.0
      - run: npm install react-dom@^18.2.0
      - run: npm install react-google-recaptcha-v3@^1.10.1
      - run: npm install react-responsive@^9.0.2
      - run: npm install react-router-dom@^6.10.0
      - run: npm install react-scripts@5.0.1
      - run: npm install sass@^1.62.1
      - run: npm install typescript@^4.9.5
      - run: npm install web-vitals@^2.1.4

      - run: npm run build
      - run: npm test

  build-docker:
    runs-on: windows-latest
    needs: publish

    steps:
      - uses: actions/checkout@v3
      - name: Build the Docker image
        run: docker build . -t frontend_docker
